syntax = "proto3";

package proto;

option go_package = "gnosql/proto";

message NoRequestBody {
}

message DatabaseCreateRequest {
  string DatabaseName = 1;
  repeated CollectionInput Collections = 2;
}

message DatabaseCreateResponse {
  string Data = 1;
  string Error = 2;
}

message DatabaseDeleteRequest {
  string DatabaseName = 1;
}

message DatabaseDeleteResponse {
  string Data = 1;
  string Error = 2;
}

message DatabaseGetAllResponse {
  repeated string Data = 1;
  string Error = 2;
}

message LoadToDiskResponse {
  string Data = 1;
  string Error = 2;
}

message CollectionInput {
  string CollectionName = 1;
  repeated string IndexKeys = 2;
}

message CollectionCreateRequest {
  string DatabaseName = 1;
  repeated CollectionInput Collections = 2;
}

message CollectionCreateResponse {
  string Data = 1;
  string Error = 2;
}

message CollectionDeleteRequest {
  string DatabaseName = 1;
  repeated string Collections = 2;
}

message CollectionDeleteResponse {
  string Data = 1;
  string Error = 2;
}

message CollectionGetAllRequest {
  string DatabaseName = 1;
}

message CollectionGetAllResponse {
  repeated string Data = 1;
  string Error = 2;
}

message CollectionStatsRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
}

message CollectionStatsResponse {
  CollectionStats Data = 1;
  string Error = 2;

}

message CollectionStats  {
	string CollectionName = 1;
  repeated string IndexKeys= 2;
	int32 Documents = 3;
}

message DocumentCreateRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
  string Document = 3;
}

message DocumentCreateResponse {
  string Data = 1;
  string Error = 2;
}

message DocumentReadRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
  string Id = 3;
}

message DocumentReadResponse {
  string Data = 1;
  string Error = 2;
}

message DocumentFilterRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
  string Filter = 3;
}

message DocumentFilterResponse {
  string Data = 1;
  string Error = 2;
}

message DocumentUpdateRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
  string Id = 3;
  string Document = 4;
}

message DocumentUpdateResponse {
  string Data = 1;
  string Error = 2;
}

message DocumentDeleteRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
  string Id = 3;
}

message DocumentDeleteResponse {
  string Data = 1;
  string Error = 2;
}

message DocumentGetAllRequest {
  string DatabaseName = 1;
  string CollectionName = 2;
}

message DocumentGetAllResponse {
  string Data = 1;
  string Error = 2;
}

service GnoSQLService {
  rpc CreateNewDatabase(DatabaseCreateRequest) returns (DatabaseCreateResponse);
  rpc DeleteDatabase(DatabaseDeleteRequest) returns (DatabaseDeleteResponse);
  rpc GetAllDatabases(NoRequestBody) returns (DatabaseGetAllResponse);
  rpc LoadToDisk(NoRequestBody) returns (LoadToDiskResponse);

  rpc CreateNewCollection(CollectionCreateRequest) returns (CollectionCreateResponse);
  rpc DeleteCollections(CollectionDeleteRequest) returns (CollectionDeleteResponse);
  rpc GetAllCollections(CollectionGetAllRequest) returns (CollectionGetAllResponse);
  rpc GetCollectionStats(CollectionStatsRequest) returns (CollectionStatsResponse);

  rpc CreateDocument(DocumentCreateRequest) returns (DocumentCreateResponse);
  rpc ReadDocument(DocumentReadRequest) returns (DocumentReadResponse);
  rpc FilterDocument(DocumentFilterRequest) returns (DocumentFilterResponse);
  rpc UpdateDocument(DocumentUpdateRequest) returns (DocumentUpdateResponse);
  rpc DeleteDocument(DocumentDeleteRequest) returns (DocumentDeleteResponse);
  rpc GetAllDocuments(DocumentGetAllRequest) returns (DocumentGetAllResponse); 
}
